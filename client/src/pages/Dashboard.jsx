// src/pages/Dashboard.jsx
import React, { useState, useEffect, useCallback } from 'react'; // <-- –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º useCallback
import { Link } from 'react-router-dom'; // <-- –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Link
import { useAuth } from '../context/AuthContext';
import { fetchSummary, fetchTransactions } from '../api/transactionApi';
import TransactionForm from '../components/TransactionForm'; // <-- –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É

const Dashboard = () => {
  const { user, logout } = useAuth();
  
  const [summary, setSummary] = useState(null);
  const [transactions, setTransactions] = useState([]);
  const [loadingData, setLoadingData] = useState(true);
  const [error, setError] = useState(null);

  const today = new Date();
  const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1).toISOString().split('T')[0];
  const lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0).toISOString().split('T')[0];
  
  // –í—ã–Ω–æ—Å–∏–º –ª–æ–≥–∏–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ –≤ useCallback, —á—Ç–æ–±—ã –µ—ë –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—ã–∑—ã–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ
  const loadData = useCallback(async () => {
      try {
        setLoadingData(true);
        setError(null);

        // 1. –ó–∞–≥—Ä—É–∑–∫–∞ —Å–≤–æ–¥–∫–∏ (–±–∞–ª–∞–Ω—Å)
        const summaryData = await fetchSummary(firstDayOfMonth, lastDayOfMonth);
        setSummary(summaryData);

        // 2. –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        const transactionsData = await fetchTransactions(firstDayOfMonth, lastDayOfMonth);
        setTransactions(transactionsData);

      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", err);
        setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö.");
      } finally {
        setLoadingData(false);
      }
  }, [firstDayOfMonth, lastDayOfMonth]);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –ø—Ä–∏ —Å–º–µ–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  useEffect(() => {
    loadData();
  }, [loadData]); 


  if (!user) {
    return <div style={{padding: '20px'}}>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...</div>;
  }
  
  if (loadingData) {
    return <div style={{padding: '20px'}}>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...</div>;
  }

  return (
    <div style={{ padding: '20px' }}>
      <h1>üëã –ü—Ä–∏–≤–µ—Ç, {user.email}!</h1>
      <p>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥: {firstDayOfMonth} –ø–æ {lastDayOfMonth}</p>
      
      
            {/* –ë–ª–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <div style={{ marginBottom: '20px' }}>
          <button onClick={logout} style={{ marginRight: '10px', padding: '8px 12px', background: '#dc3545', color: 'white', border: 'none', cursor: 'pointer', borderRadius: '4px' }}>
            –í—ã–π—Ç–∏
          </button>
          <Link to="/categories" style={{ padding: '8px 12px', background: '#6c757d', color: 'white', textDecoration: 'none', borderRadius: '4px' }}>
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
          </Link>
                    {/* –ù–û–í–ê–Ø –°–°–´–õ–ö–ê */}
          <Link to="/budgets" style={{ padding: '8px 12px', background: '#007bff', color: 'white', textDecoration: 'none', borderRadius: '4px' }}>
            –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞
          </Link>
          <Link to="/debts" style={{ padding: '8px 12px', background: '#ffc107', color: 'black', textDecoration: 'none', borderRadius: '4px' }}>
            –î–æ–ª–≥–∏ –∏ –ó–∞–π–º—ã
          </Link>
          <Link to="/savings" style={{ padding: '8px 12px', background: '#ffc107', color: 'black', textDecoration: 'none', borderRadius: '4px' }}>
            –ù–∞–∫–æ–ø–ª–µ–Ω–∏—è
          </Link>


      </div>


      {error && <p style={{ color: 'red' }}>{error}</p>}
      
      {/* –î–û–ë–ê–í–õ–Ø–ï–ú –§–û–†–ú–£ */}
      <TransactionForm onTransactionAdded={loadData} /> 

      {/* –ë–õ–û–ö –ë–ê–õ–ê–ù–°–ê */}
      {summary && (
        <div style={{ display: 'flex', gap: '20px', marginBottom: '30px' }}>
          <BalanceCard title="–ë–∞–ª–∞–Ω—Å" amount={summary.balance} color="#007bff" />
          <BalanceCard title="–î–æ—Ö–æ–¥—ã" amount={summary.totalIncome} color="#28a745" />
          <BalanceCard title="–†–∞—Å—Ö–æ–¥—ã" amount={summary.totalExpense} color="#dc3545" />
        </div>
      )}

      {/* –°–ü–ò–°–û–ö –¢–†–ê–ù–ó–ê–ö–¶–ò–ô */}
      <h2>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</h2>
      {transactions.length > 0 ? (
        <TransactionList transactions={transactions} />
      ) : (
        <p>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥ –Ω–µ—Ç.</p>
      )}
    </div>
  );
};

// ... (BalanceCard –∏ TransactionList –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã-–∑–∞–≥–ª—É—à–∫–∏ (–¥–ª—è —á–∏—Å—Ç–æ—Ç—ã –∫–æ–¥–∞)
const BalanceCard = ({ title, amount, color }) => (
    <div style={{ padding: '20px', borderLeft: `5px solid ${color}`, borderRadius: '4px', boxShadow: '0 2px 4px rgba(0,0,0,0.1)', flexGrow: 1, background: '#fff' }}>
        <h4 style={{ margin: 0, color: '#6c757d' }}>{title}</h4>
        <p style={{ margin: '10px 0 0', fontSize: '1.5em', fontWeight: 'bold', color: color }}>
            {parseFloat(amount).toLocaleString('ru-RU')} ‚ÇΩ
        </p>
    </div>
);

const TransactionList = ({ transactions }) => (
    <ul style={{ listStyle: 'none', padding: 0 }}>
        {transactions.map(t => (
            <li key={t.id} style={{ padding: '10px', borderBottom: '1px solid #eee', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                <div>
                    <strong>{t.Category?.name || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}</strong> 
                    <span style={{ color: '#6c757d', fontSize: '0.9em', marginLeft: '10px' }}>
                        ({t.description})
                    </span>
                </div>
                <span style={{ color: t.type === 'income' ? '#28a745' : '#dc3545', fontWeight: 'bold' }}>
                    {t.type === 'expense' ? '-' : '+'} {parseFloat(t.amount).toLocaleString('ru-RU')} ‚ÇΩ
                </span>
            </li>
        ))}
    </ul>
);

export default Dashboard;




